{"version":3,"file":"doy.development.js","sources":["../src/utils/getOwnKeys.js","../src/utils/objectEquals.js","../src/utils/shallowEquals.js","../src/core/$ScopeEvent.js","../src/core/$ScopeEventQueue.js","../src/core/$ScopeEventManager.js","../src/utils/transformName.js","../src/utils/isObjectExtensible.js","../src/utils/definedUnEnumerableProperty.js","../src/types/ObservableObject.js","../src/utils/getPrototypeOf.js","../src/types/ObservableArray.js","../src/types/ObservableMap.js","../src/types/ObservableSet.js","../src/types/ObservableFactory.js","../src/core/observable.js","../src/core/why.js","../src/core/$Scope.js","../src/core/atom.js","../src/core/extensible.js","../src/index.js"],"sourcesContent":["/* @flow */\n\nexport default function getOwnKeys(obj: Object): Array<string> {\n    return Object.keys(obj).filter((key) => {\n        return !key.startsWith || !key.startsWith('$$');\n    });\n}\n","/* @flow */\nimport getOwnKeys from './getOwnKeys';\n\nexport default function objectEquals(first: any, second: any) {\n    let keysF = getOwnKeys(first);\n    let keysS = getOwnKeys(second);\n\n    if (keysF.length !== keysS.length) {\n        return false;\n    }\n\n    return keysF.every((key) => {\n        return first[key] === second[key];\n    });\n}\n","/* @flow */\n\nimport objectEquals from './objectEquals';\n\nexport default function shallowEquals(first: any, second: any): boolean {\n    if (first === second || (first !== first && second !== second)) { // eslint-disable-line\n        return true;\n    }\n\n    if (typeof first !== typeof second || typeof first !== 'object') {\n        return false;\n    }\n\n    return objectEquals(first, second);\n}\n","/* @flow */\n\nimport shallowEquals from '../utils/shallowEquals';\n\nexport default class $ScopeEvent {\n    // private\n    _name: string;\n    _payload: ?Object;\n    _disposed: boolean;\n    _stoped: boolean;\n    _sync: boolean;\n\n    constructor(name: string, payload: ?Object = null, sync: boolean = false): void {\n        this._name = name;\n        this._payload = payload;\n        this._sync = sync;\n        this._disposed = false;\n        this._stoped = false;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    get payload(): ?Object {\n        return this._payload;\n    }\n\n    get sync(): boolean {\n        return this._sync;\n    }\n\n    valid(): boolean {\n        return !this._disposed && !this._stoped;\n    }\n\n    dispose(): void {\n        this._disposed = true;\n    }\n\n    stopPropagation(): void {\n        this._stoped = true;\n    }\n\n    equals(event: $ScopeEvent): boolean {\n        if (typeof event !== typeof this) {\n            return false;\n        }\n\n        return this.name === event.name && shallowEquals(this.payload, event.payload);\n    }\n\n    static create(eventName: string, payload: ?Object, sync: boolean = false): $ScopeEvent {\n        return new $ScopeEvent(eventName, payload, sync);\n    }\n}\n","/* @flow */\n\nimport $Scope from './$Scope';\nimport $ScopeEvent from './$ScopeEvent';\n\ntype EventWrapper = {\n    types: Array<number>,\n    event: $ScopeEvent\n}\n\nconst STATE: { IDLE: number, RUNNING: number } = {\n    IDLE: 1,\n    RUNNING: 2\n};\n\nconst EMIT_TYPE: { CHILDREN: number, PARENT: number, SELF: number } = {\n    SELF: 1,\n    CHILDREN: 2,\n    PARENT: 3\n};\n\nconst EMPTY = () => {};\n\nconst isEqualArray = function(first, second) {\n    if (first.length !== second.length) {\n        return false;\n    }\n\n    return first.every((value, index) => {\n        return value === second[index];\n    });\n};\n\nexport default class $ScopeEventQueue {\n    // private\n    _scope: $Scope;\n    _queue: Array<EventWrapper> = [];\n    _state: number = STATE.IDLE;\n    _destroyed: boolean = false;\n\n    constructor(scope: $Scope): void {\n        this._scope = scope;\n    }\n\n    emit(eventName: string, payload: ?Object = null, sync: boolean = false): ?Disposer {\n        return this._push([EMIT_TYPE.SELF, EMIT_TYPE.PARENT], $ScopeEvent.create(eventName, payload, sync));\n    }\n\n    broadcast(eventName: string, payload: ?Object = null, sync: boolean = false): ?Disposer {\n        return this._push([EMIT_TYPE.SELF, EMIT_TYPE.CHILDREN], $ScopeEvent.create(eventName, payload, sync));\n    }\n\n    fire(eventName: string, payload: ?Object = null, sync: boolean = false): ?Disposer {\n        return this._push([EMIT_TYPE.SELF], $ScopeEvent.create(eventName, payload, sync));\n    }\n\n    _push(emitTypes: Array<number>, event: $ScopeEvent): ?Disposer {\n        if (this._destroyed) {\n            return console.warn(`receive a new event[${event.name}], but the EventQueue has destroyed, please check your source logic`);\n        }\n\n        let eventWrapper: EventWrapper = {\n            types: emitTypes,\n            event: event\n        };\n\n        if (this._canFilterEvent(eventWrapper)) { //filter\n            return EMPTY;\n        }\n\n        let oldEvents = this._getEmitActionInQueue(eventWrapper);\n        oldEvents.forEach((event) => {\n            let index = this._queue.indexOf(event);\n            if (index >= 0) {\n                this._queue.splice(index, 1);\n            }\n        });\n\n        this._queue.push(eventWrapper);\n\n        if (this._state !== STATE.RUNNING) {\n            this._runQueue();\n        }\n\n        return function disposer() {\n            event.dispose();\n        };\n    }\n\n    _canFilterEvent(eventWrapper: EventWrapper): boolean {\n        if (eventWrapper.types.length > 1 || eventWrapper.types[0] !== EMIT_TYPE.SELF) {\n            return false;\n        }\n        return !this._scope.eventManager.isExisted(eventWrapper.event.name);\n    }\n\n    _getEmitActionInQueue(eventWrapper: EventWrapper): Array<EventWrapper> {\n        return this._queue.filter((event) => {\n            return isEqualArray(event.types, eventWrapper.types) && event.event.equals(eventWrapper.event);\n        });\n    }\n\n    _runQueue(): void {\n        setTimeout(() => this._doNextEmitAction());\n    }\n\n    _doNextEmitAction(): any {\n        if (this._queue.length <= 0) {\n            this._state = STATE.IDLE;\n            return;\n        }\n\n        this._state = STATE.RUNNING;\n\n        let wrapper = this._queue.splice(0, 1)[0];\n        if (wrapper) {\n            wrapper.types.forEach((type: number) => {\n                this._sendEvent((scope: $Scope, recursionIndex: number) => {\n                    if (type === EMIT_TYPE.SELF) {\n                        return recursionIndex === 0 ? [scope] : null;\n                    } else if (type === EMIT_TYPE.CHILDREN) {\n                        return scope.childScopes;\n                    } else if (type === EMIT_TYPE.PARENT && scope.parentScope) {\n                        return [scope.parentScope];\n                    }\n                }, wrapper.event);\n            });\n        }\n\n        this._runQueue();\n    }\n\n    _sendEvent(getScopesFn: (scope: $Scope, recursionIndex: number) => ?Array<$Scope>, event: $ScopeEvent): void {\n        let recursionIndex = 0;\n        const _run = (scopes: ?Array<$Scope>, event: $ScopeEvent) => {\n            if (!scopes || !event.valid()) {\n                return;\n            }\n\n            scopes.forEach((scope) => {\n                if (!scope) {\n                    return;\n                }\n\n                let listeners = scope.eventManager.getListenersByEventName(event.name);\n                if (listeners) {\n                    listeners.forEach((listener) => {\n                        if (!listener) {\n                            return;\n                        }\n\n                        const _do = () => {\n                            if (!this._destroyed) listener(event);\n                        };\n\n                        if (event.sync) {\n                            _do();\n                        } else {\n                            setTimeout(() => _do());\n                        }\n                    });\n                }\n\n                let nextScopes = getScopesFn(scope, ++recursionIndex);\n                if (nextScopes) {\n                    setTimeout(() => _run(nextScopes, event));\n                }\n            });\n        }\n\n        //$FlowFixMe: the getScopeFn can't be null\n        _run(getScopesFn(this._scope, recursionIndex), event);\n    }\n\n    destroy(): void {\n        this._destroyed = true;\n        this._queue = [];\n    }\n}\n","/* @flow */\n\nimport $Scope from './$Scope';\nimport $ScopeEventQueue from './$ScopeEventQueue';\n\nexport default class $ScopeEventManager {\n    // private\n    _eventQueue: $ScopeEventQueue;\n    _listeners: Map<string, Array<ScopeEventListener>> = new Map();\n    _destroyed: boolean = false;\n\n    constructor($scope: $Scope | Object) {\n        this._eventQueue = new $ScopeEventQueue($scope);\n    }\n\n    /**\n     * add event listener to array\n     * @param eventName\n     * @param listener\n     * @returns {function(this:$ScopeEventManager)}\n     */\n    addEventListener(eventName: string, listener: ScopeEventListener): ?() => void {\n        if (this._destroyed) {\n            return console.warn('the EventManager has destroyed, please check your source logic');\n        }\n\n        let listeners = this._listeners.get(eventName) || [];\n        listeners.push(listener);\n\n        this._listeners.set(eventName, listeners);\n\n        return () => {\n            let els = this._listeners.get(eventName);\n            if (!els) {\n                return;\n            }\n\n            let index = els.indexOf(listener);\n            if (index < 0) {\n                return;\n            }\n\n            els.splice(index, 1);\n        };\n    }\n\n    /**\n     * whether listener has been registered\n     * @param eventName\n     * @returns {Array.<ScopeEventListener>|boolean}\n     */\n    isExisted(eventName: string): ?boolean {\n        let listeners = this._listeners.get(eventName);\n        return listeners && listeners.length > 0;\n    }\n\n    getListenersByEventName(eventName: string): ?Array<ScopeEventListener> {\n        return this._listeners.get(eventName);\n    }\n\n    emit(eventName: string, payload: ?Object = null, sync: boolean = false): ?Disposer {\n        return this._eventQueue.emit(eventName, payload, sync);\n    }\n\n    broadcast(eventName: string, payload: ?Object = null, sync: boolean = false): ?Disposer {\n        return this._eventQueue.broadcast(eventName, payload, sync);\n    }\n\n    fire(eventName: string, payload: ?Object = null, sync: boolean = false): ?Disposer {\n        return this._eventQueue.fire(eventName, payload, sync);\n    }\n\n    destroy(): void {\n        this._destroyed = true;\n        this._eventQueue.destroy();\n    }\n}\n","/* @flow */\n\nexport default function transformName(targetName: string, propertyKey: string) {\n    return (targetName || '') + (propertyKey ? ((targetName ? '.' : '') + propertyKey) : '');\n}\n","/* @flow */\n\nexport default function isObjectExtensible(obj: any): boolean {\n    if (obj === null || typeof obj !== 'object') {\n        return false;\n    }\n\n    return Object.isExtensible(obj);\n}\n","/* @flow */\n\nimport isObjectExtensible from './isObjectExtensible';\n\nexport default function definedUnEnumerableProperty(obj: Object, property: string, value: any): void {\n    if (isObjectExtensible(obj)) {\n        Object.defineProperty(obj, property, {\n            writable: false,\n            enumerable: false,\n            configurable: true,\n            value: value\n        });\n    }\n}\n","/* @flow */\n\nimport transformName from '../utils/transformName';\nimport definedUnEnumerableProperty from '../utils/definedUnEnumerableProperty';\n\nexport default class ObservableObject {\n    // public\n    $$observable: boolean = true;\n    $$atom: boolean;\n    $$parent: ?ObservableObject;\n    $$targetName: string;\n    $$name: string;\n    $$defaultTarget: Object;\n    $$value: *;\n    constructor(defaultTarget: any, targetName: string = '', parent: ?ObservableObject = null, atom: boolean = false, value: * = null) {\n        //$FlowFixMe\n        this.$$atom = atom || (defaultTarget || {}).$$atom || false;\n        this.$$parent = parent;\n        this.$$targetName = targetName;\n        this.$$name = transformName(parent ? parent.$$name : '', targetName);\n        this.$$defaultTarget = defaultTarget;\n        this.$$value = value;\n    }\n\n    $$notify(result: any) {\n        this.$$value = this.$$value;\n        return result;\n    }\n\n    $$patchTo(target: Object): Object {\n        target = target || {};\n        Object.keys(this).concat('$$notify').forEach((key) => {\n            //$FlowIgnore\n            definedUnEnumerableProperty(target, key, this[key]);\n        });\n\n        return target;\n    }\n}\n\nexport const isObservable = (obj: ?Object) => {\n    return obj && obj.$$observable;\n};\n\nexport const isAtom = (obj: ?Object) => {\n    return obj && obj.$$atom;\n};\n\nexport const isExtensible = (obj: ?Object) => {\n    return obj && obj.$$extensible;\n};\n","/* @flow */\n\nexport default function getPrototypeOf(target: any, property: string) {\n    return Object.getPrototypeOf(target)[property];\n}\n","/* @flow */\n\nimport ObservableObject from './ObservableObject';\nimport definedUnEnumerableProperty from '../utils/definedUnEnumerableProperty';\nimport getPrototypeOf from '../utils/getPrototypeOf';\n\nexport default class ObservableArray extends ObservableObject {\n    constructor(defaultTarget: Array<*>, targetName: string, parent: ?ObservableObject) {\n        super(defaultTarget, targetName, parent, true, defaultTarget);\n    }\n\n    pop() {\n        return this.$$notify(getPrototypeOf(this, 'pop').bind(this)());\n    }\n\n    push(items: any): number {\n        return this.$$notify(getPrototypeOf(this, 'push').bind(this)(items));\n    }\n\n    reverse() {\n        return this.$$notify(getPrototypeOf(this, 'reverse').bind(this)());\n    }\n\n    shift() {\n        return this.$$notify(getPrototypeOf(this, 'shift').bind(this)());\n    }\n\n    splice(start: number, deleteCount: number, items: Array<*>): Array<*> {\n        if (items) {\n            return this.$$notify(getPrototypeOf(this, 'splice').bind(this)(start, deleteCount, items));\n        } else {\n            return this.$$notify(getPrototypeOf(this, 'splice').bind(this)(start, deleteCount));\n        }\n    }\n\n    unshift(items: Array<*>): number {\n        return this.$$notify(getPrototypeOf(this, 'unshift').bind(this)(items));\n    }\n\n    $$patchTo(target: Object) {\n        target = target || [];\n        super.$$patchTo(target);\n        ['pop', 'push', 'reverse', 'shift', 'splice', 'unshift'].forEach((key) => {\n            //$FlowIgnore\n            definedUnEnumerableProperty(target, key, this[key]);\n        });\n\n        return target;\n    }\n}\n","/* @flow */\n\nimport ObservableObject from './ObservableObject';\nimport definedUnEnumerableProperty from '../utils/definedUnEnumerableProperty';\nimport getPrototypeOf from '../utils/getPrototypeOf';\n\nexport default class ObservableMap extends ObservableObject {\n    constructor(defaultTarget: Map<*, *>, targetName: string, parent: ?ObservableObject) {\n        super(defaultTarget, targetName, parent, true, defaultTarget);\n    }\n\n    clear() {\n        return this.$$notify(getPrototypeOf(this, 'clear').bind(this)());\n    }\n\n    delete(key: any) {\n        return this.$$notify(getPrototypeOf(this, 'delete').bind(this)(key));\n    }\n\n    set(key: any, value: any) {\n        return this.$$notify(getPrototypeOf(this, 'set').bind(this)(key, value));\n    }\n\n    $$patchTo(target: Object): Object {\n        target = target || new Map();\n        super.$$patchTo(target);\n        ['clear', 'delete', 'set'].forEach((key) => {\n            //$FlowIgnore\n            definedUnEnumerableProperty(target, key, this[key]);\n        });\n\n        return target;\n    }\n}\n","/* @flow */\n\nimport ObservableObject from './ObservableObject';\nimport definedUnEnumerableProperty from '../utils/definedUnEnumerableProperty';\nimport getPrototypeOf from '../utils/getPrototypeOf';\n\nexport default class ObservableSet extends ObservableObject {\n    constructor(defaultTarget: Set<*>, targetName: string, parent: ?ObservableObject) {\n        super(defaultTarget, targetName, parent, true, defaultTarget);\n    }\n\n    add(value: any) {\n        return this.$$notify(getPrototypeOf(this, 'add').bind(this)(value));\n    }\n\n    clear() {\n        return this.$$notify(getPrototypeOf(this, 'clear').bind(this)());\n    }\n\n    delete(value: any) {\n        return this.$$notify(getPrototypeOf(this, 'delete').bind(this)(value));\n    }\n\n    $$patchTo(target: Object) {\n        target = target || new Set();\n        super.$$patchTo(target);\n        ['add', 'clear', 'delete'].forEach((key) => {\n            //$FlowIgnore\n            definedUnEnumerableProperty(target, key, this[key]);\n        });\n\n        return target;\n    }\n}\n","/* @flow */\n\nimport ObservableArray from './ObservableArray';\nimport ObservableObject, { isObservable } from './ObservableObject';\nimport ObservableMap from './ObservableMap';\nimport ObservableSet from './ObservableSet';\nimport isObjectExtensible from '../utils/isObjectExtensible';\nimport forceAssign from '../utils/forceAssign';\n\nfunction isArray(obj) {\n    return Array.isArray(obj);\n}\n\nfunction isES6Map(obj) {\n    return obj instanceof Map;\n}\n\nfunction isObject(obj) {\n    return typeof obj === 'object';\n}\n\nfunction isES6Set(obj) {\n    return obj instanceof Set;\n}\n\nexport default class ObservableFactory {\n    static create(defaultTarget: Object, targetName: string = '', parentTarget: ?ObservableObject = null): ?ObservableObject {\n        if (!isObjectExtensible(defaultTarget)) {\n            return null;\n        }\n\n        if (isObservable(defaultTarget)) {\n            return defaultTarget;\n        }\n\n        if (isArray(defaultTarget)) {\n            //$FlowIgnore\n            return new ObservableArray(defaultTarget, targetName, parentTarget);\n        }\n\n        if (isES6Map(defaultTarget)) {\n            return new ObservableMap(defaultTarget, targetName, parentTarget);\n        }\n\n        if (isES6Set(defaultTarget)) {\n            return new ObservableSet(defaultTarget, targetName, parentTarget);\n        }\n\n        if (isObject(defaultTarget)) {\n            return new ObservableObject(defaultTarget, targetName, parentTarget);\n        }\n\n        return null;\n    }\n}\n","/* @flow */\n\nimport ObservableObject, { isObservable, isAtom, isExtensible } from '../types/ObservableObject';\nimport ObservableFactory from '../types/ObservableFactory';\nimport transformName from '../utils/transformName';\nimport shallowClone from '../utils/shallowClone';\nimport isObjectExtensible from '../utils/isObjectExtensible';\nimport definedUnEnumerableProperty from '../utils/definedUnEnumerableProperty';\n\nclass JointWrapper {\n    $$joint: boolean = true;\n    target: Object;\n    constructor(target: Object) {\n        this.target = target;\n    }\n}\n\nfunction isPrivateValue(propertyKey: string): boolean {\n    return propertyKey === '$$value';\n}\n\nfunction isObject(obj: Object): boolean {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction supportType(obj: Object): boolean {\n    if (isExtensible(obj) || !obj.constructor || !obj.constructor.name) { //Object\n        return true;\n    }\n\n    return ['Object', 'Array', 'Map', 'Set'].includes(obj.constructor.name);\n}\n\nfunction needObservable(obj) {\n    return isObject(obj) && supportType(obj) && isObjectExtensible(obj) && !isAtom(obj);\n}\n\nfunction jointNewChild(target: Object, options: ?ObservableOption): boolean {\n    if (!target || typeof target !== 'object' || !target.$$parent || !target.$$targetName) {\n        return false;\n    }\n\n    let newTarget = shallowClone(target);\n    target.$$parent[target.$$targetName] = new JointWrapper(observable(newTarget, options, target.$$targetName, target.$$parent));\n\n    jointNewChild(target.$$parent, options);\n\n    return true;\n}\n\nfunction observable(defaultTarget: any, options: ?ObservableOption = null, targetName: string = '', parentTarget: ?ObservableObject): Object {\n    let target = ObservableFactory.create(defaultTarget, targetName, parentTarget);\n    if (!target) {\n        return defaultTarget;\n    }\n\n    let observableTarget = isObservable(defaultTarget) ? defaultTarget : target.$$patchTo(defaultTarget);\n\n    const handler = (propertyKey) => {\n        let propertyValue = observableTarget[propertyKey];\n        if (!isPrivateValue(propertyKey) && needObservable(propertyValue)) {\n            observableTarget[propertyKey] = observable(propertyValue, options, propertyKey, observableTarget);\n        }\n\n        //fix In a observable object modified, failed to modify the object of parent\n        if (!isPrivateValue(propertyKey) && isObservable(propertyValue) && propertyValue.$$parent !== observableTarget) {\n            definedUnEnumerableProperty(observableTarget[propertyKey], '$$parent', observableTarget);\n        }\n\n        let descriptor = {\n            _value: observableTarget[propertyKey],\n            enumerable: !propertyKey.startsWith('$$'),\n            get: function() {\n                let name = transformName(observableTarget.$$name, isAtom(observableTarget) || isPrivateValue(propertyKey) ? '' : propertyKey);\n\n                options && options.watch && options.watch(name);\n\n                return descriptor._value;\n            },\n            set: function(value) {\n                //let isJoint = false;\n                //if (value instanceof JointWrapper) {\n                //    isJoint = value.$$joint;\n                //    value = value.target;\n                //}\n\n                let oldValue = descriptor._value;\n                if (!isPrivateValue(propertyKey) && oldValue === value) {\n                    return true;\n                }\n\n                if (!isAtom(observableTarget)) {\n                    // re-observer\n                    if (isPrivateValue(propertyKey)) {\n                        observableTarget = observable(observableTarget, options, observableTarget.$$name, observableTarget.$$parent);\n                    } else if (!isAtom(value)) {\n                        descriptor._value = observable(value, options, propertyKey, observableTarget);\n                    } else {\n                        descriptor._value = value;\n                    }\n                }\n\n                //jointNewChild(observableTarget, options);\n\n                //if the target parent not null, the changed event has fired in jointNewChild function;\n                //if (isJoint) {\n                //    return true;\n                //}\n\n                if (!isPrivateValue(propertyKey)) {\n                    options && options.changed && options.changed(transformName(observableTarget.$$name,\n                        isAtom(observableTarget) ? '' : propertyKey));\n                }\n            }\n        };\n\n        Object.defineProperty(observableTarget, propertyKey, descriptor);\n    };\n\n    let properties = ['$$value'];\n    if (!isAtom(observableTarget)) {\n        properties = properties.concat(Object.keys(observableTarget));\n    }\n\n    properties.forEach(handler);\n\n    return observableTarget;\n}\n\nexport default observable;\n","/* @flow */\n\nexport const Reporter = {\n    enabled: false,\n    printFn: null,\n    print: (msg: any) => {\n        if (!Reporter.enabled) {\n            return;\n        }\n\n        let fn = Reporter.printFn || console.log;\n        if (fn) {\n            try {\n                fn(Date.now() + ' ' + msg);\n            } catch (e) {\n                console.log('print report failed!');\n            }\n        }\n    }\n};\n\nexport default function why(enabled: boolean, printFn: any): void {\n    Reporter.enabled = enabled;\n    Reporter.printFn = printFn;\n}\n","/* @flow */\n\nimport $ScopeEventManager from './$ScopeEventManager';\nimport observable from './observable';\nimport { Reporter } from './why';\n\nclass $Scope {\n    // static\n    static NEED_RENDER: string = '_$$needRender';\n\n    // protected\n    _name: string;\n    _canWatch: boolean = false;\n    _destroyed: boolean = false;\n\n    // public\n    parentScope: ?$Scope;\n    childScopes: Array<$Scope> = [];\n    eventManager: $ScopeEventManager;\n    store: Object;\n\n    constructor(parentScope: $Scope | Object, defaultStore: Object = {}, name: string = ''): void {\n        this._name = name;\n        this.eventManager = new $ScopeEventManager(this);\n        this._setParentScope(parentScope);\n\n        Object.defineProperty(this, 'store', {\n            writable: false,\n            enumerable: true,\n            configurable: true,\n            value: observable(defaultStore || {}, this._getObservableOption(), 'store', null)\n        });\n    }\n\n    $apply(): void {\n        if (!this._destroyed) {\n            this.$fire($Scope.NEED_RENDER);\n        }\n    }\n\n    $watch(modal: string, listener: ScopeEventListener): ?Disposer {\n        return this.eventManager.addEventListener(`$$${modal.replace(/\\./g, '$')}`, listener);\n    }\n\n    $on(eventName: string, listener: ScopeEventListener): ?Disposer {\n        return this.eventManager.addEventListener(eventName, listener);\n    }\n\n    $emit(eventName: string, payload: ?Object = null, sync: boolean = false): ?Disposer {\n        return this.eventManager.emit(eventName, payload, sync);\n    }\n\n    $broadcast(eventName: string, payload: ?Object = null, sync: boolean = false): ?Disposer {\n        return this.eventManager.broadcast(eventName, payload, sync);\n    }\n\n    $fire(eventName: string, payload: ?Object = null, sync: boolean = false): ?Disposer {\n        return this.eventManager.fire(eventName, payload, sync);\n    }\n\n    $new(defaultStore: any, name: string = ''): $Scope {\n        return new $Scope(this, defaultStore, name);\n    }\n\n    $destroy(): void {\n        if (this.parentScope) {\n            this.parentScope._removeChildScope(this);\n        }\n\n        this.eventManager.destroy();\n\n        this._destroyed = true;\n    }\n\n    $action(fn: () => any): void {\n        try {\n            this.store.$$notify();\n            this._canWatch = true;\n            return fn();\n        } finally {\n            this._canWatch = false;\n        }\n    }\n\n    _getObservableOption(): ObservableOption {\n        let watchNames = new Set();\n        let _self = this;\n        return {\n            changed: (name) => {\n                let eventName = `$$${name}`;\n                Reporter.print(`[CHANGED] $Scope[${this._name}].Store[${eventName}]`);\n                if (_self.eventManager.isExisted(eventName)) {\n                    _self.$fire(eventName);\n                }\n\n                //apply render!\n                if (watchNames.has(eventName)) {\n                    _self.$apply();\n                }\n            },\n            watch: (name) => {\n                let eventName = `$$${name}`;\n                if (_self._canWatch && !watchNames.has(eventName)) {\n                    Reporter.print(`[WATCH] $Scope[${this._name}].Store[${eventName}]`);\n                    watchNames.add(eventName);\n                }\n            }\n        };\n    }\n\n    _setParentScope(scope: $Scope | Object): void {\n        this.parentScope = scope === ROOT ? null : (scope || $rootScope);\n        if (this.parentScope) {\n            this.parentScope._addChildScope(this);\n        }\n    }\n\n    _addChildScope(childScope: $Scope): void {\n        if (this.childScopes.includes(childScope)) {\n            return;\n        }\n\n        this.childScopes.push(childScope);\n    }\n\n    _removeChildScope(childScope: $Scope): void {\n        let index = this.childScopes.indexOf(childScope);\n        if (index < 0) {\n            return;\n        }\n\n        this.childScopes.splice(index, 1);\n    }\n}\n\nconst ROOT: Object = {};\n\nexport const $rootScope: $Scope = new $Scope(ROOT);\n\nexport default $Scope;\n","/* @flow */\n\nexport default function atom<T>(obj: Object): Object {\n    return Object.assign(obj, {'$$atom': true});\n}\n","/* @flow */\nimport definedUnEnumerableProperty from '../utils/definedUnEnumerableProperty';\n\nexport default function extensible(obj: Object): Object {\n    definedUnEnumerableProperty(obj, '$$extensible', true);\n    return obj;\n}\n","/* @flow */\n\nimport $Scope, { $rootScope } from './core/$Scope';\nimport atom from './core/atom';\nimport extensible from './core/extensible';\nimport why from './core/why';\n\nexport default {\n    $rootScope,\n    $Scope,\n    atom,\n    extensible,\n    why\n};\n"],"names":["getOwnKeys","obj","Object","keys","filter","key","startsWith","objectEquals","first","second","keysF","keysS","length","every","shallowEquals","$ScopeEvent","name","payload","sync","_name","_payload","_sync","_disposed","_stoped","event","eventName","STATE","EMIT_TYPE","EMPTY","isEqualArray","value","index","$ScopeEventQueue","scope","_queue","_state","IDLE","_destroyed","_scope","_push","SELF","PARENT","create","CHILDREN","emitTypes","console","warn","eventWrapper","_canFilterEvent","oldEvents","_getEmitActionInQueue","forEach","indexOf","splice","push","RUNNING","_runQueue","disposer","dispose","types","eventManager","isExisted","equals","_doNextEmitAction","wrapper","type","_sendEvent","recursionIndex","childScopes","parentScope","getScopesFn","_run","scopes","valid","listeners","getListenersByEventName","listener","_do","nextScopes","$ScopeEventManager","$scope","_listeners","Map","_eventQueue","get","set","els","emit","broadcast","fire","destroy","transformName","targetName","propertyKey","isObjectExtensible","isExtensible","definedUnEnumerableProperty","property","defineProperty","ObservableObject","defaultTarget","parent","atom","$$observable","$$atom","$$parent","$$targetName","$$name","$$defaultTarget","$$value","result","target","concat","isObservable","isAtom","$$extensible","getPrototypeOf","ObservableArray","$$notify","bind","items","start","deleteCount","ObservableMap","ObservableSet","Set","isArray","Array","isES6Map","isObject","isES6Set","ObservableFactory","parentTarget","isPrivateValue","supportType","constructor","includes","needObservable","observable","options","observableTarget","$$patchTo","handler","propertyValue","descriptor","watch","_value","oldValue","changed","properties","Reporter","msg","enabled","fn","printFn","log","Date","now","e","why","$Scope","defaultStore","_canWatch","_setParentScope","_getObservableOption","$fire","NEED_RENDER","modal","addEventListener","replace","_removeChildScope","store","watchNames","_self","print","has","$apply","add","ROOT","$rootScope","_addChildScope","childScope","assign","extensible"],"mappings":"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"}